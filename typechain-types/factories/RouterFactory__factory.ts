/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RouterFactory, RouterFactoryInterface } from "../RouterFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_transactionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "RouterCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "createRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createRouterAndAddLiquidity",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionManager",
    outputs: [
      {
        internalType: "contract ITransactionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161160138038061160183398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61156b61009660003960008181604b01526101d6015261156b6000f3fe6080604052600436106100345760003560e01c80633b71645214610039578063be34675014610089578063e4bdc7e11461009c575b600080fd5b34801561004557600080fd5b5061006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006d6100973660046102d1565b6100bc565b3480156100a857600080fd5b5061006d6100b7366004610292565b6101d1565b60405163e4bdc7e160e01b81526001600160a01b03841660048201526000908190309063e4bdc7e190602401602060405180830381600087803b15801561010257600080fd5b505af1158015610116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013a91906102b5565b9050806001600160a01b031663c95f9d0e61015c866001600160a01b03161590565b610167576000610169565b845b6040516001600160e01b031960e084901b168152600481018790526001600160a01b03881660248201526044016000604051808303818588803b1580156101af57600080fd5b505af11580156101c3573d6000803e3d6000fd5b509398975050505050505050565b6000807f0000000000000000000000000000000000000000000000000000000000000000833360405161020390610285565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801561023f573d6000803e3d6000fd5b506040516001600160a01b03821681529091507f59490ddc6330cd50a9703c0b77827ff51b21e7a8592eb50d5252a4d20188cfd39060200160405180910390a192915050565b61120c8061032a83390190565b6000602082840312156102a3578081fd5b81356102ae81610311565b9392505050565b6000602082840312156102c6578081fd5b81516102ae81610311565b6000806000606084860312156102e5578182fd5b83356102f081610311565b9250602084013561030081610311565b929592945050506040919091013590565b6001600160a01b038116811461032657600080fd5b5056fe60a06040523480156200001157600080fd5b506040516200120c3803806200120c8339810160408190526200003491620001c2565b6200003f3362000080565b606083901b6001600160601b031916608052600180546001600160a01b0319166001600160a01b0384161790556200007781620000d0565b5050506200020b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000127565b620001a28162000080565b50565b80516001600160a01b0381168114620001bd57600080fd5b919050565b600080600060608486031215620001d7578283fd5b620001e284620001a5565b9250620001f260208501620001a5565b91506200020260408501620001a5565b90509250925092565b60805160601c610fc06200024c6000396000818160d50152818161024b01528181610357015281816104040152818161043b01526104fb0152610fc06000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b146101695780639b151a8014610187578063be91a2ba146101b4578063c95f9d0e146101d4578063d9459372146101e7578063f2fde38b146101fa57600080fd5b806305fe138b146100a15780633b716452146100c35780633bbed4a01461011457806366d003ac14610134578063715018a614610154575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610919565b61021a565b005b3480156100cf57600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012057600080fd5b506100c161012f366004610747565b6102ad565b34801561014057600080fd5b506001546100f7906001600160a01b031681565b34801561016057600080fd5b506100c1610302565b34801561017557600080fd5b506000546001600160a01b03166100f7565b34801561019357600080fd5b506101a76101a23660046107a3565b610338565b60405161010b9190610dba565b3480156101c057600080fd5b506101a76101cf36600461076a565b6103e5565b6100c16101e2366004610919565b610439565b6101a76101f53660046107dc565b6104e9565b34801561020657600080fd5b506100c1610215366004610747565b6105bd565b600154604051633cc6af3160e21b8152600481018490526001600160a01b03838116602483015291821660448201527f00000000000000000000000000000000000000000000000000000000000000009091169063f31abcc490606401600060405180830381600087803b15801561029157600080fd5b505af11580156102a5573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146102e05760405162461bcd60e51b81526004016102d790610aaa565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461032c5760405162461bcd60e51b81526004016102d790610aaa565b6103366000610658565b565b6103406106a8565b6040516301362a3560e71b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639b151a809061038c908590600401610b4d565b61020060405180830381600087803b1580156103a757600080fd5b505af11580156103bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103df9190610815565b92915050565b6103ed6106a8565b604051635f48d15d60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063be91a2ba9061038c908590600401610adf565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c95f9d0e610479836001600160a01b03161590565b610484576000610486565b345b6040516001600160e01b031960e084901b168152600481018690526001600160a01b03851660248201526044016000604051808303818588803b1580156104cc57600080fd5b505af11580156104e0573d6000803e3d6000fd5b50505050505050565b6104f16106a8565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d945937261054061053360a0860160808701610747565b6001600160a01b03161590565b61054b57600061054d565b345b846040518363ffffffff1660e01b815260040161056a9190610be9565b610200604051808303818588803b15801561058457600080fd5b505af1158015610598573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906103df9190610815565b6000546001600160a01b031633146105e75760405162461bcd60e51b81526004016102d790610aaa565b6001600160a01b03811661064c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d7565b61065581610658565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040805161020081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a081018290526101c081018290526101e081019190915290565b803561073781610f75565b919050565b805161073781610f75565b600060208284031215610758578081fd5b813561076381610f75565b9392505050565b60006020828403121561077b578081fd5b813567ffffffffffffffff811115610791578182fd5b82016102408185031215610763578182fd5b6000602082840312156107b4578081fd5b813567ffffffffffffffff8111156107ca578182fd5b82016102808185031215610763578182fd5b6000602082840312156107ed578081fd5b813567ffffffffffffffff811115610803578182fd5b82016102608185031215610763578182fd5b60006102008284031215610827578081fd5b61082f610ef1565b6108388361073c565b81526108466020840161073c565b60208201526108576040840161073c565b60408201526108686060840161073c565b60608201526108796080840161073c565b608082015261088a60a0840161073c565b60a082015261089b60c0840161073c565b60c08201526108ac60e0840161073c565b60e08201526101006108bf81850161073c565b9082015261012083810151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c080840151908201526101e0928301519281019290925250919050565b6000806040838503121561092b578081fd5b82359150602083013561093d81610f75565b809150509250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b61098b8261097e8361072c565b6001600160a01b03169052565b6109976020820161072c565b6001600160a01b031660208301526109b16040820161072c565b6001600160a01b031660408301526109cb6060820161072c565b6001600160a01b031660608301526109e56080820161072c565b6001600160a01b031660808301526109ff60a0820161072c565b6001600160a01b031660a0830152610a1960c0820161072c565b6001600160a01b031660c0830152610a3360e0820161072c565b6001600160a01b031660e0830152610100610a4f82820161072c565b6001600160a01b03169083015261012081810135908301526101408082013590830152610160808201359083015261018080820135908301526101a080820135908301526101c080820135908301526101e090810135910152565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208152610af06020820183610971565b6000610b00610200840184610f29565b6102406102208181870152610b1a61026087018486610948565b9350610b2881880188610f29565b878603601f19018489015293509050610b42848483610948565b979650505050505050565b60208152610b5e6020820183610971565b600061022061020084013581840152610b7981850185610f29565b91506102806102408181870152610b956102a087018585610948565b9350610ba381880188610f29565b93509050601f19610260818887030181890152610bc1868685610948565b9550610bcf818a018a610f29565b955092505080878603018388015250610b42848483610948565b60208152610bfd6020820161097e8461072c565b6000610c0b6020840161072c565b6001600160a01b038116604084015250610c276040840161072c565b6001600160a01b038116606084015250610c436060840161072c565b6001600160a01b038116608084015250610c5f6080840161072c565b6001600160a01b03811660a084015250610c7b60a0840161072c565b6001600160a01b03811660c084015250610c9760c0840161072c565b6001600160a01b03811660e084015250610cb360e0840161072c565b610100610cca818501836001600160a01b03169052565b610cd581860161072c565b915050610120610cef818501836001600160a01b03169052565b6101409150808501358285015250610160818501358185015261018091508085013582850152506101a081850135818501526101c091508085013582850152506101e08185013581850152610d4681860186610f29565b925090506102606102008181870152610d6461028087018585610948565b9350610d7281880188610f29565b93509050601f19610220818887030181890152610d90868685610948565b9550610d9e818a018a610f29565b9550925050610240818887030181890152610bc1868685610948565b81516001600160a01b0316815261020081016020830151610de660208401826001600160a01b03169052565b506040830151610e0160408401826001600160a01b03169052565b506060830151610e1c60608401826001600160a01b03169052565b506080830151610e3760808401826001600160a01b03169052565b5060a0830151610e5260a08401826001600160a01b03169052565b5060c0830151610e6d60c08401826001600160a01b03169052565b5060e0830151610e8860e08401826001600160a01b03169052565b50610100838101516001600160a01b03169083015261012080840151908301526101408084015190830152610160808401519083015261018080840151908301526101a080840151908301526101c080840151908301526101e092830151929091019190915290565b604051610200810167ffffffffffffffff81118282101715610f2357634e487b7160e01b600052604160045260246000fd5b60405290565b6000808335601e19843603018112610f3f578283fd5b830160208101925035905067ffffffffffffffff811115610f5f57600080fd5b803603831315610f6e57600080fd5b9250929050565b6001600160a01b038116811461065557600080fdfea2646970667358221220dc1b85888239af35e4bf493541bb13394754ea6878c9976a924c63b5435765f764736f6c63430008040033a264697066735822122024249571dab3b7a437b9c27072c3c017a3396bc9ecc5e8d6c50098a7a4a638f864736f6c63430008040033";

type RouterFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RouterFactory__factory extends ContractFactory {
  constructor(...args: RouterFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RouterFactory> {
    return super.deploy(
      _transactionManager,
      overrides || {}
    ) as Promise<RouterFactory>;
  }
  getDeployTransaction(
    _transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_transactionManager, overrides || {});
  }
  attach(address: string): RouterFactory {
    return super.attach(address) as RouterFactory;
  }
  connect(signer: Signer): RouterFactory__factory {
    return super.connect(signer) as RouterFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterFactoryInterface {
    return new utils.Interface(_abi) as RouterFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterFactory {
    return new Contract(address, _abi, signerOrProvider) as RouterFactory;
  }
}
