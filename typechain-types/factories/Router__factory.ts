/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Router, RouterInterface } from "../Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_transactionManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receivingChainTxManagerAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "address",
                name: "router",
                type: "address",
              },
              {
                internalType: "address",
                name: "initiator",
                type: "address",
              },
              {
                internalType: "address",
                name: "sendingAssetId",
                type: "address",
              },
              {
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
              },
              {
                internalType: "address",
                name: "sendingChainFallback",
                type: "address",
              },
              {
                internalType: "address",
                name: "receivingAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "callTo",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "callDataHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "sendingChainId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "receivingChainId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preparedBlockNumber",
                type: "uint256",
              },
            ],
            internalType: "struct ITransactionManager.TransactionData",
            name: "txData",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encodedMeta",
            type: "bytes",
          },
        ],
        internalType: "struct ITransactionManager.CancelArgs",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "cancel",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receivingChainTxManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainFallback",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "callDataHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "sendingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preparedBlockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct ITransactionManager.TransactionData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receivingChainTxManagerAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "address",
                name: "router",
                type: "address",
              },
              {
                internalType: "address",
                name: "initiator",
                type: "address",
              },
              {
                internalType: "address",
                name: "sendingAssetId",
                type: "address",
              },
              {
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
              },
              {
                internalType: "address",
                name: "sendingChainFallback",
                type: "address",
              },
              {
                internalType: "address",
                name: "receivingAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "callTo",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "callDataHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "sendingChainId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "receivingChainId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preparedBlockNumber",
                type: "uint256",
              },
            ],
            internalType: "struct ITransactionManager.TransactionData",
            name: "txData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "relayerFee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encodedMeta",
            type: "bytes",
          },
        ],
        internalType: "struct ITransactionManager.FulfillArgs",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "fulfill",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receivingChainTxManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainFallback",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "callDataHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "sendingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preparedBlockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct ITransactionManager.TransactionData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "receivingChainTxManagerAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "address",
                name: "router",
                type: "address",
              },
              {
                internalType: "address",
                name: "initiator",
                type: "address",
              },
              {
                internalType: "address",
                name: "sendingAssetId",
                type: "address",
              },
              {
                internalType: "address",
                name: "receivingAssetId",
                type: "address",
              },
              {
                internalType: "address",
                name: "sendingChainFallback",
                type: "address",
              },
              {
                internalType: "address",
                name: "receivingAddress",
                type: "address",
              },
              {
                internalType: "address",
                name: "callTo",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "sendingChainId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "receivingChainId",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "callDataHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "transactionId",
                type: "bytes32",
              },
            ],
            internalType: "struct ITransactionManager.InvariantTransactionData",
            name: "invariantData",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedCallData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encodedBid",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "bidSignature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "encodedMeta",
            type: "bytes",
          },
        ],
        internalType: "struct ITransactionManager.PrepareArgs",
        name: "args",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "prepare",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receivingChainTxManagerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingChainFallback",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "callDataHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "sendingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivingChainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preparedBlockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct ITransactionManager.TransactionData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionManager",
    outputs: [
      {
        internalType: "contract ITransactionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _transactionManager: string,
    _signer: string,
    _recipient: string,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Router> {
    return super.deploy(
      _transactionManager,
      _signer,
      _recipient,
      _owner,
      overrides || {}
    ) as Promise<Router>;
  }
  getDeployTransaction(
    _transactionManager: string,
    _signer: string,
    _recipient: string,
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _transactionManager,
      _signer,
      _recipient,
      _owner,
      overrides || {}
    );
  }
  attach(address: string): Router {
    return super.attach(address) as Router;
  }
  connect(signer: Signer): Router__factory {
    return super.connect(signer) as Router__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new utils.Interface(_abi) as RouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Router {
    return new Contract(address, _abi, signerOrProvider) as Router;
  }
}
